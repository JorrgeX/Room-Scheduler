
import java.sql.Date;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author acv
 */
public class RoomSchedulerFrame extends javax.swing.JFrame
{

    
    /**
     * Creates new form RoomSchedulerFrame
     */
    public RoomSchedulerFrame()
    {
        initComponents();
        
        // Load the combo boxes with data.
        rebuildFacultyComboBoxes();
        rebuildDateComboBoxes();
        rebuildWaitlistTextArea();
        rebuildRoomComboBoxes();
    }
    
    public void rebuildFacultyComboBoxes()
    {
        reserveFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
        cancelFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
        facultyStatusFacultyComboBox.setModel(new javax.swing.DefaultComboBoxModel(Faculty.getFacultyList().toArray()));
    }
    
    public void rebuildDateComboBoxes(){
        reserveDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
        reservationDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
        cancelDateComboBox.setModel(new javax.swing.DefaultComboBoxModel(Dates.getAllDates().toArray()));
    }
    
    public void rebuildRoomComboBoxes(){
        ArrayList<RoomEntry> roomEntry = RoomQueries.getAllPossibleRooms();
        ArrayList<String> roomString = new ArrayList<>();
        
        for (int i = 0; i < roomEntry.size(); i++){
            roomString.add(roomEntry.get(i).getName());
        }
        
        dropRoomComboBox.setModel(new javax.swing.DefaultComboBoxModel(roomString.toArray()));     
    }
    
    public void rebuildWaitlistTextArea(){
        
        waitlistTextArea.setText("");   // clear the text area
        ArrayList<WaitlistEntry> waitlists = WaitlistQueries.getAllWaitlist();

        for (int cnt = 0; cnt < waitlists.size(); cnt++){
            waitlistTextArea.append(waitlists.get(cnt).getName() + " " + waitlists.get(cnt).getDate().toString() + " " + waitlists.get(cnt).getSeats().toString() + "\n");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        waitlistPanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        addFacultyLabel = new javax.swing.JLabel();
        addFacultyTextField = new javax.swing.JTextField();
        addFacultyButton = new javax.swing.JButton();
        addFacultyStatusLabel = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        reserveFacultyLabel = new javax.swing.JLabel();
        reserveFacultyComboBox = new javax.swing.JComboBox<>();
        reserveDateLabel = new javax.swing.JLabel();
        reserveDateComboBox = new javax.swing.JComboBox<>();
        reserveSeatsLabel = new javax.swing.JLabel();
        reserveSeatsTextField = new javax.swing.JTextField();
        reserveSubmitButton = new javax.swing.JButton();
        reserveStatusLabel = new javax.swing.JLabel();
        reservationStatusLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        reservationDateLabel = new javax.swing.JLabel();
        reservationDateComboBox = new javax.swing.JComboBox<>();
        reservationButton = new javax.swing.JButton();
        reservationTextArea = new javax.swing.JTextArea();
        jPanel4 = new javax.swing.JPanel();
        waitlistTextArea = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        addRoomLabel = new javax.swing.JLabel();
        addRoomTextField = new javax.swing.JTextField();
        addRoomSeatsLabel = new javax.swing.JLabel();
        addRoomSeatsTextField = new javax.swing.JTextField();
        addRoomButton = new javax.swing.JButton();
        addRoomStatusTextArea = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        addDateLabel = new javax.swing.JLabel();
        addDateSpinner = new javax.swing.JSpinner();
        addDateButton = new javax.swing.JButton();
        addDateStatusLabel = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        cancelFacultyLabel = new javax.swing.JLabel();
        cancelFacultyComboBox = new javax.swing.JComboBox<>();
        cancelDateLabel = new javax.swing.JLabel();
        cancelDateComboBox = new javax.swing.JComboBox<>();
        cancelButton = new javax.swing.JButton();
        cancelStatusTextArea = new javax.swing.JTextArea();
        jPanel8 = new javax.swing.JPanel();
        facultyStatusFacultyLabel = new javax.swing.JLabel();
        facultyStatusFacultyComboBox = new javax.swing.JComboBox<>();
        facultyStatusButton = new javax.swing.JButton();
        facultyStatusTextArea = new javax.swing.JTextArea();
        jPanel9 = new javax.swing.JPanel();
        dopRoomLabel = new javax.swing.JLabel();
        dropRoomComboBox = new javax.swing.JComboBox<>();
        dropRoomButton = new javax.swing.JButton();
        dropRoomStatusTextArea = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Room Scheduler");

        waitlistPanel.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        addFacultyLabel.setText("Faculty Name: ");

        addFacultyTextField.setColumns(20);

        addFacultyButton.setText("Submit");
        addFacultyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFacultyButtonActionPerformed(evt);
            }
        });

        addFacultyStatusLabel.setText("    ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(addFacultyLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(167, 167, 167)
                        .addComponent(addFacultyButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addFacultyStatusLabel)))
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addFacultyLabel)
                    .addComponent(addFacultyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(addFacultyButton)
                .addGap(18, 18, 18)
                .addComponent(addFacultyStatusLabel)
                .addContainerGap(404, Short.MAX_VALUE))
        );

        waitlistPanel.addTab("Add Faculty", jPanel1);

        reserveFacultyLabel.setText("Faculty: ");

        reserveDateLabel.setText("Date: ");

        reserveDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "date1", "date2" }));

        reserveSeatsLabel.setText("Seats Required: ");

        reserveSeatsTextField.setColumns(3);

        reserveSubmitButton.setText("Submit");
        reserveSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reserveSubmitButtonActionPerformed(evt);
            }
        });

        reserveStatusLabel.setText("   ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(reserveFacultyLabel)
                                .addComponent(reserveDateLabel)
                                .addComponent(reserveSeatsLabel))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(reserveFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reserveDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(reserveSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(reserveSubmitButton)
                            .addGap(26, 26, 26)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(reservationStatusLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reserveStatusLabel)))
                .addContainerGap(270, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveFacultyLabel)
                    .addComponent(reserveFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reserveDateLabel)
                    .addComponent(reserveDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveSeatsLabel)
                    .addComponent(reserveSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(reserveSubmitButton)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reserveStatusLabel)
                    .addComponent(reservationStatusLabel))
                .addContainerGap(326, Short.MAX_VALUE))
        );

        waitlistPanel.addTab("Reserve Room", jPanel2);

        reservationDateLabel.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        reservationDateLabel.setText("Date:");

        reservationDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "date1", "date2" }));

        reservationButton.setText("Enter");
        reservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservationButtonActionPerformed(evt);
            }
        });

        reservationTextArea.setColumns(20);
        reservationTextArea.setRows(5);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(reservationDateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(reservationDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(198, 198, 198)
                        .addComponent(reservationButton))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(reservationTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(reservationDateComboBox, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(reservationDateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(reservationTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(reservationButton)
                .addGap(129, 129, 129))
        );

        waitlistPanel.addTab("Reservations", jPanel3);

        waitlistTextArea.setColumns(20);
        waitlistTextArea.setRows(5);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addComponent(waitlistTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(0, 124, Short.MAX_VALUE)
                .addComponent(waitlistTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 124, Short.MAX_VALUE))
        );

        waitlistPanel.addTab("Waitlist", jPanel4);

        addRoomLabel.setText("Add Room:");

        addRoomTextField.setColumns(20);

        addRoomSeatsLabel.setText("Seats: ");

        addRoomSeatsTextField.setColumns(10);

        addRoomButton.setText("Submit");
        addRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButtonActionPerformed(evt);
            }
        });

        addRoomStatusTextArea.setColumns(20);
        addRoomStatusTextArea.setRows(5);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(addRoomButton))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(addRoomSeatsLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(addRoomLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addRoomTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addRoomSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(137, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addRoomStatusTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRoomLabel)
                    .addComponent(addRoomTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRoomSeatsLabel)
                    .addComponent(addRoomSeatsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(addRoomButton)
                .addContainerGap(395, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(addRoomStatusTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        waitlistPanel.addTab("Add Room", jPanel5);

        addDateLabel.setText("Add Date: ");

        addDateSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1607597442706L), null, null, java.util.Calendar.DAY_OF_MONTH));

        addDateButton.setText("Submit");
        addDateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDateButtonActionPerformed(evt);
            }
        });

        addDateStatusLabel.setText(" ");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(addDateButton))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addDateStatusLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(addDateLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addDateLabel)
                    .addComponent(addDateSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(addDateButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addDateStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        waitlistPanel.addTab("Add Date", jPanel6);

        cancelFacultyLabel.setText("Faculty Name: ");

        cancelDateLabel.setText("Date: ");

        cancelDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "date1", "date2" }));

        cancelButton.setText("Cancel Reservation");
        cancelButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        cancelStatusTextArea.setColumns(20);
        cancelStatusTextArea.setRows(5);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelFacultyLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cancelDateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cancelButton)
                    .addComponent(cancelDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(cancelStatusTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelFacultyLabel)
                    .addComponent(cancelFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelDateLabel)
                    .addComponent(cancelDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(cancelButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelStatusTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        waitlistPanel.addTab("Canel Reservation", jPanel7);

        facultyStatusFacultyLabel.setText("Faculty Name: ");

        facultyStatusButton.setText("Submit");
        facultyStatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facultyStatusButtonActionPerformed(evt);
            }
        });

        facultyStatusTextArea.setColumns(20);
        facultyStatusTextArea.setRows(5);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(facultyStatusTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(facultyStatusFacultyLabel)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(facultyStatusButton))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(facultyStatusFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(facultyStatusFacultyLabel)
                    .addComponent(facultyStatusFacultyComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(facultyStatusButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(facultyStatusTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(146, Short.MAX_VALUE))
        );

        waitlistPanel.addTab("Faculty", jPanel8);

        dopRoomLabel.setText("Room: ");

        dropRoomButton.setText("Drop");
        dropRoomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropRoomButtonActionPerformed(evt);
            }
        });

        dropRoomStatusTextArea.setColumns(20);
        dropRoomStatusTextArea.setRows(5);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dropRoomButton)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(dopRoomLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dropRoomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(342, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(dropRoomStatusTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dopRoomLabel)
                    .addComponent(dropRoomComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(dropRoomButton)
                .addContainerGap(423, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel9Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(dropRoomStatusTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        waitlistPanel.addTab("Drop Room", jPanel9);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(164, 164, 164))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(waitlistPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(12, 12, 12)
                .addComponent(waitlistPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 585, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFacultyButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addFacultyButtonActionPerformed
    {//GEN-HEADEREND:event_addFacultyButtonActionPerformed
        // Add the faculty to the faculty table.
        String name = addFacultyTextField.getText();
        Faculty.addFaculty(name);
        addFacultyStatusLabel.setText(name+" has been added to the Faculty.");
        
        // rebuild the reservation faculty combo box.
        rebuildFacultyComboBoxes();
        rebuildDateComboBoxes();
        rebuildWaitlistTextArea();
    }//GEN-LAST:event_addFacultyButtonActionPerformed

    private void reserveSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reserveSubmitButtonActionPerformed
        // TODO add your handling code here:
        String faculty = reserveFacultyComboBox.getSelectedItem().toString();
        Date date = Date.valueOf(reserveDateComboBox.getSelectedItem().toString());
        Integer seats = Integer.parseInt(reserveSeatsTextField.getText());
        Timestamp timestamp = new Timestamp(Calendar.getInstance().getTime().getTime());
        
        ArrayList<RoomEntry> allRooms = RoomQueries.getAllPossibleRooms();
        ArrayList<RoomEntry> reservedRoom = ReservationQueries.getRoomsReservedByDate(date);
        ArrayList<String> reservedRoomString = new ArrayList<>();
        for (int cnt = 0; cnt<reservedRoom.size(); cnt++){
            reservedRoomString.add(reservedRoom.get(cnt).getName());
        }
                
        for (Integer cnt = 0; cnt < allRooms.size(); cnt++){
            RoomEntry currentRoom = allRooms.get(cnt);
            if (currentRoom.getSeats() >= seats){
                if (!reservedRoomString.contains(currentRoom.getName())){
                    ReservationQueries.addReservationEntry(new ReservationEntry(faculty, currentRoom.getName(), date, seats, timestamp));
                    reservationStatusLabel.setText(faculty + " reserves room " + currentRoom.getName());
                    return;
                }
            }
        }
        WaitlistQueries.addWaitlistEntry(new WaitlistEntry(faculty, date, seats, timestamp));
        reservationStatusLabel.setText(faculty + " gets waitlisted");
        
        rebuildWaitlistTextArea();
    }//GEN-LAST:event_reserveSubmitButtonActionPerformed

    private void reservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservationButtonActionPerformed
        // TODO add your handling code here:
        Date date = Date.valueOf(reservationDateComboBox.getSelectedItem().toString());
        
        ArrayList<ReservationEntry> reservations = ReservationQueries.getReservationByDate(date);     
        reservationTextArea.setText("");
        
        for (Integer cnt = 0; cnt < reservations.size(); cnt++){
            reservationTextArea.append(reservations.get(cnt).getFaculty() + " reserved " + reservations.get(cnt).getRoom() + "\n");
        } 
        
        rebuildWaitlistTextArea();
    }//GEN-LAST:event_reservationButtonActionPerformed

    private void addRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButtonActionPerformed
        // TODO add your handling code here:
        String roomName = addRoomTextField.getText().toString();
        Integer seats = Integer.parseInt(addRoomSeatsTextField.getText());
        RoomEntry newRoom = new RoomEntry(roomName, seats);
        RoomQueries.addRoom(newRoom);
        ArrayList<Date> dates = Dates.getAllDates();
        
        addRoomStatusTextArea.setText(roomName + " has been added.");
        
        for (int i = 0; i < dates.size(); i++){
            Date date = dates.get(i);
            ArrayList<WaitlistEntry> waitlists = WaitlistQueries.getWaitlistByDate(date);
            
            for (int w = 0; w < waitlists.size(); w++){
                WaitlistEntry current = waitlists.get(w);
                if (current.getSeats() <= seats){
                    WaitlistQueries.dropWaitlistEntry(current);
                    ReservationQueries.addReservationEntry(new ReservationEntry(current.getName(), roomName, date, current.getSeats(), current.getTimestamp()));
                    addRoomStatusTextArea.append("\n" + current.getName() + " reserves " + roomName + " for " + date.toString());
                    break;
                }
            }
        }
        
        rebuildRoomComboBoxes();
        rebuildWaitlistTextArea();
    }//GEN-LAST:event_addRoomButtonActionPerformed

    private void addDateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDateButtonActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat formater = new SimpleDateFormat("yyyy-MM-dd");
        String spinnerValue = formater.format(addDateSpinner.getValue());
        Date day = Date.valueOf(spinnerValue);
        
        Dates.addDate(day);
        addDateStatusLabel.setText(spinnerValue + " has been added.");
        
        rebuildDateComboBoxes();
    }//GEN-LAST:event_addDateButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        String name = cancelFacultyComboBox.getSelectedItem().toString();
        Date date = Date.valueOf(cancelDateComboBox.getSelectedItem().toString());
        
        ArrayList<ReservationEntry> reservations = ReservationQueries.getReservationByDate(date);
        ArrayList<WaitlistEntry> waitlists = WaitlistQueries.getWaitlistByDate(date);
        ArrayList<WaitlistEntry> waitlistFaculty = WaitlistQueries.getWaitlistByFaculty(name);
        ArrayList<RoomEntry> rooms = RoomQueries.getAllPossibleRooms();
        Integer seats = 0;
        
        cancelStatusTextArea.setText(name + "'s reservation on " + date.toString() + " has been canceled.");
        
        for (int i = 0; i < reservations.size(); i++){
            ReservationEntry currentReserve = reservations.get(i);
            if (currentReserve.getFaculty().contains(name)){
                String room = currentReserve.getRoom();
                ReservationQueries.deleteReservation(currentReserve);
                
                // find out room's name
                for (int cnt = 0; cnt < rooms.size(); cnt++){
                    RoomEntry currentRoom = rooms.get(cnt);
                    if (currentRoom.getName().contains(currentReserve.getRoom())){
                        seats = currentRoom.getSeats();
                        break;
                    }
                }
                
                // add next reservation from waitlist
                for (int j = 0; j < waitlists.size(); j++){
                    WaitlistEntry currentWait = waitlists.get(j);
                    if (currentWait.getSeats() <= seats){
                        WaitlistQueries.dropWaitlistEntry(currentWait);
                        ReservationQueries.addReservationEntry(new ReservationEntry(currentWait.getName(), room, currentWait.getDate(), currentWait.getSeats(), currentWait.getTimestamp()));
                        cancelStatusTextArea.append("\n" + currentWait.getName() + " reserved " + room + ".");
                        break;
                    }
                }
                break;
            }
        }
        
        for (int w = 0; w < waitlistFaculty.size(); w++){
            WaitlistEntry cur = waitlistFaculty.get(w);
            if (cur.getDate().compareTo(date) == 0){
                WaitlistQueries.dropWaitlistEntry(cur);
                break;
            }
        }
        
        rebuildWaitlistTextArea();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void facultyStatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facultyStatusButtonActionPerformed
        // TODO add your handling code here:
        String faculty = reserveFacultyComboBox.getSelectedItem().toString();
        ArrayList<ReservationEntry> reservations = ReservationQueries.getReservationbyFaculty(faculty);
        ArrayList<WaitlistEntry> waitlists = WaitlistQueries.getWaitlistByFaculty(faculty);
        
        facultyStatusTextArea.setText("");
        for (int i = 0; i < reservations.size(); i++){
            facultyStatusTextArea.append(reservations.get(i).getFaculty() + " reserved " + reservations.get(i).getRoom() + " " + reservations.get(i).getDate().toString() + "\n");
        }
        
        for (int j = 0; j < waitlists.size(); j++){
            facultyStatusTextArea.append(waitlists.get(j).getName() + " " + waitlists.get(j).getDate().toString() + " " + waitlists.get(j).getSeats().toString() + "\n");
        }
    }//GEN-LAST:event_facultyStatusButtonActionPerformed

    private void dropRoomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropRoomButtonActionPerformed
        // TODO add your handling code here:
        String room = dropRoomComboBox.getSelectedItem().toString();
        ArrayList<ReservationEntry> reserved = ReservationQueries.getReservationByRoom(room);
        
        RoomQueries.dropRoom(room);
        dropRoomStatusTextArea.setText("Room " + room + " has been dropped.");
        ArrayList<RoomEntry> allRooms = RoomQueries.getAllPossibleRooms();
        
        for (int cnt = 0; cnt < reserved.size(); cnt++){
            ReservationEntry current = reserved.get(cnt);
            ReservationQueries.deleteReservation(current);
            WaitlistQueries.addWaitlistEntry(new WaitlistEntry(current.getFaculty(), current.getDate(), current.getSeats(), current.getTimestamp()));
            dropRoomStatusTextArea.append("\n" + current.getFaculty() + " " + current.getDate().toString() + " is moved to waitlist.");
            
            ArrayList<ReservationEntry> roomReservedOnDate = ReservationQueries.getReservationByDate(current.getDate());
            ArrayList<String> reservedString = new ArrayList<>();
            for (int i = 0; i < roomReservedOnDate.size(); i++){
                reservedString.add(roomReservedOnDate.get(i).getRoom());
            }
            
            int seats = current.getSeats();
            for (Integer j = 0; j < allRooms.size(); j++){
            RoomEntry currentRoom = allRooms.get(j);
            if (currentRoom.getSeats() >= seats){
                if (!reservedString.contains(currentRoom.getName())){
                    ReservationQueries.addReservationEntry(new ReservationEntry(current.getFaculty(), currentRoom.getName(), current.getDate(), seats, current.getTimestamp()));
                    dropRoomStatusTextArea.append("\n" + current.getFaculty() + " reserves room " + currentRoom.getName() + " on " + current.getDate().toString() + " from waitlist.");
                    WaitlistQueries.dropWaitlistEntry(new WaitlistEntry(current.getFaculty(), current.getDate(), current.getSeats(), current.getTimestamp()));
                    break;
                }
            }
            }
        }
        
        rebuildRoomComboBoxes();
        rebuildWaitlistTextArea();
    }//GEN-LAST:event_dropRoomButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(RoomSchedulerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new RoomSchedulerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addDateButton;
    private javax.swing.JLabel addDateLabel;
    private javax.swing.JSpinner addDateSpinner;
    private javax.swing.JLabel addDateStatusLabel;
    private javax.swing.JButton addFacultyButton;
    private javax.swing.JLabel addFacultyLabel;
    private javax.swing.JLabel addFacultyStatusLabel;
    private javax.swing.JTextField addFacultyTextField;
    private javax.swing.JButton addRoomButton;
    private javax.swing.JLabel addRoomLabel;
    private javax.swing.JLabel addRoomSeatsLabel;
    private javax.swing.JTextField addRoomSeatsTextField;
    private javax.swing.JTextArea addRoomStatusTextArea;
    private javax.swing.JTextField addRoomTextField;
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox<String> cancelDateComboBox;
    private javax.swing.JLabel cancelDateLabel;
    private javax.swing.JComboBox<String> cancelFacultyComboBox;
    private javax.swing.JLabel cancelFacultyLabel;
    private javax.swing.JTextArea cancelStatusTextArea;
    private javax.swing.JLabel dopRoomLabel;
    private javax.swing.JButton dropRoomButton;
    private javax.swing.JComboBox<String> dropRoomComboBox;
    private javax.swing.JTextArea dropRoomStatusTextArea;
    private javax.swing.JButton facultyStatusButton;
    private javax.swing.JComboBox<String> facultyStatusFacultyComboBox;
    private javax.swing.JLabel facultyStatusFacultyLabel;
    private javax.swing.JTextArea facultyStatusTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JButton reservationButton;
    private javax.swing.JComboBox<String> reservationDateComboBox;
    private javax.swing.JLabel reservationDateLabel;
    private javax.swing.JLabel reservationStatusLabel;
    private javax.swing.JTextArea reservationTextArea;
    private javax.swing.JComboBox<String> reserveDateComboBox;
    private javax.swing.JLabel reserveDateLabel;
    private javax.swing.JComboBox<String> reserveFacultyComboBox;
    private javax.swing.JLabel reserveFacultyLabel;
    private javax.swing.JLabel reserveSeatsLabel;
    private javax.swing.JTextField reserveSeatsTextField;
    private javax.swing.JLabel reserveStatusLabel;
    private javax.swing.JButton reserveSubmitButton;
    private javax.swing.JTabbedPane waitlistPanel;
    private javax.swing.JTextArea waitlistTextArea;
    // End of variables declaration//GEN-END:variables
}
